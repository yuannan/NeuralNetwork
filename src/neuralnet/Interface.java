/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package neuralnet;

/**
 *
 * @author blakk
 */

//imports
import java.util.ArrayList;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


public class Interface extends javax.swing.JFrame {
    //init network size
    int inputNodes = 40;
    int hiddenNodes = 100;
    int outputNodes = 3;
    //init global vars
    double output[] = new double[outputNodes];
    double error[] = new double[outputNodes];
    //init training arrays
    char[] inputCharData = new char[inputNodes];
    double[] inputDoubleData = new double[inputNodes];
    double[] inputOutputData =  new double[outputNodes];
    //init training rates
    double rate;
    double mass;
    //init global input feilds
    String messageBoxString;
    String hiddenFileBoxString;
    String outputFileBoxString;
    //init global training sets
    ArrayList<double[]> trainingInput = new ArrayList();
    ArrayList<double[]> trainingOutput = new ArrayList();
    
    //init new network
    Network net = new Network(inputNodes,hiddenNodes,outputNodes);
    
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputLabel = new javax.swing.JLabel();
        inputWord = new javax.swing.JTextField();
        outputLabel = new javax.swing.JLabel();
        output0 = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();
        error0 = new javax.swing.JTextField();
        calcButton = new javax.swing.JButton();
        trainingHeaderLabel = new javax.swing.JLabel();
        newNetworkButton = new javax.swing.JButton();
        trainButton = new javax.swing.JButton();
        outputInputLabel = new javax.swing.JLabel();
        messageLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        messageBox = new javax.swing.JTextArea();
        dumpButton = new javax.swing.JButton();
        autodataCheckbox = new javax.swing.JCheckBox();
        roundsInput = new javax.swing.JTextField();
        trainingInputLabel = new javax.swing.JLabel();
        rateInputLabel = new javax.swing.JLabel();
        rateInput = new javax.swing.JTextField();
        massLabel = new javax.swing.JLabel();
        massInput = new javax.swing.JTextField();
        outputFileButton = new javax.swing.JButton();
        hiddenFileButton = new javax.swing.JButton();
        output1 = new javax.swing.JTextField();
        error1 = new javax.swing.JTextField();
        inputFileSet0Path = new javax.swing.JTextField();
        outputFileBox = new javax.swing.JTextField();
        hiddenFileBox = new javax.swing.JTextField();
        inputIndexBox = new javax.swing.JTextField();
        output2 = new javax.swing.JTextField();
        error2 = new javax.swing.JTextField();
        inputFileSet1Path = new javax.swing.JTextField();
        inputFileSet2Path = new javax.swing.JTextField();
        findSizeButton = new javax.swing.JButton();
        sizeOutputBox = new javax.swing.JTextField();
        trainingCountButton = new javax.swing.JButton();
        trainingCountOutputBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputLabel.setText("Input");

        inputWord.setText("word");

        outputLabel.setText("Output");

        output0.setText("output");

        errorLabel.setText("Error");

        error0.setText("error");

        calcButton.setText("Calculate");
        calcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtonActionPerformed(evt);
            }
        });

        trainingHeaderLabel.setText("Training");

        newNetworkButton.setText("NEW NETWORK");
        newNetworkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNetworkButtonActionPerformed(evt);
            }
        });

        trainButton.setText("Train");
        trainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainButtonActionPerformed(evt);
            }
        });

        outputInputLabel.setText("Output");

        messageLabel.setText("Message: ");

        messageBox.setColumns(20);
        messageBox.setRows(5);
        jScrollPane2.setViewportView(messageBox);

        dumpButton.setText("DUMP Weights");
        dumpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dumpButtonActionPerformed(evt);
            }
        });

        autodataCheckbox.setText("autoData");

        roundsInput.setText("1000");

        trainingInputLabel.setText("TRAINING INPUTS");

        rateInputLabel.setText("Rate");

        rateInput.setText("0.01");
        rateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateInputActionPerformed(evt);
            }
        });

        massLabel.setText("Mass");

        massInput.setText("0.05");

        outputFileButton.setText("Output Path");
        outputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFileButtonActionPerformed(evt);
            }
        });

        hiddenFileButton.setText("Hidden Path");
        hiddenFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hiddenFileButtonActionPerformed(evt);
            }
        });

        output1.setText("output");

        error1.setText("error");

        inputFileSet0Path.setText("set0.txt");
        inputFileSet0Path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileSet0PathActionPerformed(evt);
            }
        });

        inputIndexBox.setText("0");

        output2.setText("output");
        output2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                output2ActionPerformed(evt);
            }
        });

        error2.setText("error");

        inputFileSet1Path.setText("set1.txt");

        inputFileSet2Path.setText("set2.txt");

        findSizeButton.setText("Size");
        findSizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findSizeButtonActionPerformed(evt);
            }
        });

        trainingCountButton.setText("Trained");
        trainingCountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainingCountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(trainingInputLabel)
                            .addComponent(inputLabel)
                            .addComponent(rateInputLabel)
                            .addComponent(outputLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(massLabel)
                                    .addComponent(errorLabel)
                                    .addComponent(outputInputLabel))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(rateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(massInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(calcButton))
                                            .addComponent(inputWord, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(inputIndexBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                        .addComponent(trainButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(error0, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(output0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(error1)
                                            .addComponent(output1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dumpButton)
                                    .addComponent(newNetworkButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hiddenFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hiddenFileBox))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(outputFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(outputFileBox))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(trainingHeaderLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(autodataCheckbox)
                                        .addGap(18, 18, 18)
                                        .addComponent(roundsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputFileSet0Path, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputFileSet1Path, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputFileSet2Path, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 80, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(error2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(output2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(trainingCountOutputBox, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(sizeOutputBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(findSizeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(trainingCountButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(trainingInputLabel)
                            .addComponent(trainingHeaderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputLabel)
                            .addComponent(autodataCheckbox)
                            .addComponent(roundsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputFileSet0Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputFileSet1Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputFileSet2Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(trainButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(outputInputLabel)
                            .addComponent(inputIndexBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rateInputLabel)
                            .addComponent(rateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(massInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(calcButton))
                            .addComponent(massLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dumpButton)
                            .addComponent(outputFileButton)
                            .addComponent(outputFileBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newNetworkButton)
                            .addComponent(hiddenFileButton)
                            .addComponent(hiddenFileBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputLabel)
                    .addComponent(output0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(output1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(output2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findSizeButton)
                    .addComponent(sizeOutputBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errorLabel)
                    .addComponent(error0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(trainingCountButton)
                        .addComponent(trainingCountOutputBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newNetworkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNetworkButtonActionPerformed
        // TODO add your handling code here:
        if(!hiddenFileBoxString.equals("") && !outputFileBoxString.equals("")){
            net = new Network(new Matrix(hiddenFileBoxString), new Matrix(outputFileBoxString), inputNodes, hiddenNodes, outputNodes);
        } else{
            net = new Network(inputNodes, hiddenNodes,outputNodes);
        }
    }//GEN-LAST:event_newNetworkButtonActionPerformed

    private void calcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtonActionPerformed
        // TODO add your handling code here:
        updateInputs();
        net.compute(inputDoubleData, inputOutputData);
        updateOutputs();
    }//GEN-LAST:event_calcButtonActionPerformed

    private void trainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainButtonActionPerformed
        updateInputs();
        if(autodataCheckbox.isSelected()){
            this.initTrainingSets();
            for(int set = 0; set < trainingInput.size(); set++ ){
                net.train(trainingInput.get(set), trainingOutput.get(set), rate, mass);
            }
        } else{
            net.train(inputDoubleData, inputOutputData, rate, mass);
        }
        updateOutputs();
    }//GEN-LAST:event_trainButtonActionPerformed

    public void initTrainingSets(){
        //read in all sets
        ArrayList<ArrayList<double[]>> allSets = new ArrayList();
        javax.swing.JTextField[] inputBoxes = {inputFileSet0Path, inputFileSet1Path, inputFileSet2Path};
        for(int lang = 0; lang < outputNodes; lang++){
            ArrayList<double[]> langInDouble = new ArrayList();
            String path = inputBoxes[lang].getText();
            try{
                BufferedReader br = new BufferedReader(new FileReader(path));
                String line;
                while((line = br.readLine()) != null){
                    double[] wordInDouble = this.charsToDouble(line.toCharArray());
                    langInDouble.add(wordInDouble);
                }
            }catch(IOException e){
                System.out.print("Bad file read for training init");
            }
            allSets.add(langInDouble);
        }
        
        //clear sets
        trainingInput.clear();
        trainingOutput.clear();
        //populating new sets
        for(int wordSet = 0; wordSet < Integer.valueOf(roundsInput.getText()); wordSet++){
            //randomly pick one language
            int lang = (int)(Math.random() * outputNodes);
            //get random set from that language
            int set = (int)(Math.random() * allSets.get(lang).size());
            trainingInput.add(allSets.get(lang).get(set).clone());
            double[] trainingOutputDoubles = new double[outputNodes];
            for(int n = 0; n < outputNodes; n++){
                trainingOutputDoubles[n] = (n == lang)? 1 : 0;
            }
            trainingOutput.add(trainingOutputDoubles.clone());
        }
        
    }
    
    private void dumpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dumpButtonActionPerformed
        // TODO add your handling code here:
        String hiddenWeightsString = net.hiddenWeights.debugReturn();
        String outputWeightsString = net.outputWeights.debugReturn();
        messageBox.setText(hiddenWeightsString+outputWeightsString);
        //init current time
        DateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");
        Date dateobj = new Date();
        String timestamp = df.format(dateobj);
        //init file writer
        try{
            BufferedWriter bwH = new BufferedWriter(new FileWriter("weights/hidden"+timestamp));
            BufferedWriter bwO = new BufferedWriter(new FileWriter("weights/output"+timestamp));
            bwH.write(hiddenWeightsString);
            bwO.write(outputWeightsString);
            bwH.close();
            bwO.close();
        } catch (IOException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_dumpButtonActionPerformed

    private void rateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rateInputActionPerformed

    private void outputFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputFileButtonActionPerformed
        //updates outputWeights with the new file
        updateInputs();
        net.outputWeights = new Matrix(messageBoxString);
    }//GEN-LAST:event_outputFileButtonActionPerformed

    private void hiddenFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hiddenFileButtonActionPerformed
        //updates hiddenWeights with the new file
        updateInputs();
        net.hiddenWeights = new Matrix(messageBoxString);
    }//GEN-LAST:event_hiddenFileButtonActionPerformed

    private void output2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_output2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_output2ActionPerformed

    private void inputFileSet0PathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileSet0PathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFileSet0PathActionPerformed

    private void findSizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findSizeButtonActionPerformed
        // TODO add your handling code here:
        int amountOfWeights = 0;
        amountOfWeights += inputNodes * hiddenNodes;
        amountOfWeights += hiddenNodes * outputNodes;
        sizeOutputBox.setText(String.valueOf(amountOfWeights));
    }//GEN-LAST:event_findSizeButtonActionPerformed

    private void trainingCountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainingCountButtonActionPerformed
        // TODO add your handling code here:
        int trainingCount = net.getTrainingCount();
        trainingCountOutputBox.setText(String.valueOf(trainingCount));
    }//GEN-LAST:event_trainingCountButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }
    
    public void updateInputs(){
        String inputWordString = inputWord.getText().toLowerCase();
        inputCharData = inputWordString.toCharArray();
        inputDoubleData = charsToDouble(inputCharData);
        
        int outputIndex = Integer.valueOf(inputIndexBox.getText());
        for(int node = 0; node < outputNodes; node++){
            inputOutputData[node] = (node == outputIndex)? 1 : 0;
        }
        
        rate = Double.valueOf(rateInput.getText());
        mass = Double.valueOf(massInput.getText());
        messageBoxString = messageBox.getText();
        hiddenFileBoxString = hiddenFileBox.getText();
        outputFileBoxString = outputFileBox.getText();
    }
    
    public void updateOutputs(){
        output = net.output;
        error = net.error;
        
        javax.swing.JTextField[] outputFields = {output0, output1, output2};
        javax.swing.JTextField[] errorFields = {error0, error1, error2};
        for(int i = 0; i < outputNodes; i++){
            outputFields[i].setText(String.valueOf(output[i]));
            errorFields[i].setText(String.valueOf(error[i]));
        }
    }
    
    public double[] charsToDouble(char[] inputChars){
        int cSize = inputChars.length;
        double[] returnDoubleArray = new double[inputNodes];
        
        for(int c = 0; c < cSize; c++){
            int cInt = inputChars[c] - 'a';
            if(cInt > -1 && c < 26){
                returnDoubleArray[c] = ((double) inputChars[c] - 'a' + 1) / 26 ;
            } else{
                returnDoubleArray[c] = 0;
            }
        }
        
        return returnDoubleArray;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autodataCheckbox;
    private javax.swing.JButton calcButton;
    private javax.swing.JButton dumpButton;
    private javax.swing.JTextField error0;
    private javax.swing.JTextField error1;
    private javax.swing.JTextField error2;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton findSizeButton;
    private javax.swing.JTextField hiddenFileBox;
    private javax.swing.JButton hiddenFileButton;
    private javax.swing.JTextField inputFileSet0Path;
    private javax.swing.JTextField inputFileSet1Path;
    private javax.swing.JTextField inputFileSet2Path;
    private javax.swing.JTextField inputIndexBox;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JTextField inputWord;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField massInput;
    private javax.swing.JLabel massLabel;
    private javax.swing.JTextArea messageBox;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JButton newNetworkButton;
    private javax.swing.JTextField output0;
    private javax.swing.JTextField output1;
    private javax.swing.JTextField output2;
    private javax.swing.JTextField outputFileBox;
    private javax.swing.JButton outputFileButton;
    private javax.swing.JLabel outputInputLabel;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTextField rateInput;
    private javax.swing.JLabel rateInputLabel;
    private javax.swing.JTextField roundsInput;
    private javax.swing.JTextField sizeOutputBox;
    private javax.swing.JButton trainButton;
    private javax.swing.JButton trainingCountButton;
    private javax.swing.JTextField trainingCountOutputBox;
    private javax.swing.JLabel trainingHeaderLabel;
    private javax.swing.JLabel trainingInputLabel;
    // End of variables declaration//GEN-END:variables
}
