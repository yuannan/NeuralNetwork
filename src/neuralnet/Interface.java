/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package neuralnet;

/**
 *
 * @author blakk
 */

//imports
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;


public class Interface extends javax.swing.JFrame {
    //init network size
    int inputNodes = 13;
    int hiddenNodes = 20;
    int outputNodes = 2;
    //init global vars
    double output[];
    double error[];
    //init training arrays
    char[] inputCharData = new char[inputNodes];
    double[] inputDoubleData = new double[inputNodes];
    double[] inputOutputData =  new double[outputNodes];
    //init training rates
    double rate;
    double mass;
    //init global input feilds
    String messageBoxString;
    String hiddenFileBoxString;
    String outputFileBoxString;
    //init global training sets
    ArrayList<double[]> trainingInput = new ArrayList();
    ArrayList<double[]> trainingOutput = new ArrayList();
    
    //init new network
    Network net = new Network(inputNodes,hiddenNodes,outputNodes);
    
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputLabel = new javax.swing.JLabel();
        inputWord = new javax.swing.JTextField();
        outputLabel = new javax.swing.JLabel();
        output0 = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();
        error0 = new javax.swing.JTextField();
        calcButton = new javax.swing.JButton();
        trainingHeaderLabel = new javax.swing.JLabel();
        newNetworkButton = new javax.swing.JButton();
        trainButton = new javax.swing.JButton();
        outputInputLabel = new javax.swing.JLabel();
        messageLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        messageBox = new javax.swing.JTextArea();
        dumpButton = new javax.swing.JButton();
        autodataCheckbox = new javax.swing.JCheckBox();
        roundsInput = new javax.swing.JTextField();
        trainingInputLabel = new javax.swing.JLabel();
        rateInputLabel = new javax.swing.JLabel();
        rateInput = new javax.swing.JTextField();
        massLabel = new javax.swing.JLabel();
        massInput = new javax.swing.JTextField();
        outputFileButton = new javax.swing.JButton();
        hiddenFileButton = new javax.swing.JButton();
        lang0 = new javax.swing.JCheckBox();
        lang1 = new javax.swing.JCheckBox();
        output1 = new javax.swing.JTextField();
        error1 = new javax.swing.JTextField();
        inputFilePath = new javax.swing.JTextField();
        outputFileBox = new javax.swing.JTextField();
        hiddenFileBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputLabel.setText("Input");

        inputWord.setText("0");

        outputLabel.setText("Output");

        output0.setText("output");

        errorLabel.setText("Error");

        error0.setText("error");

        calcButton.setText("Calculate");
        calcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtonActionPerformed(evt);
            }
        });

        trainingHeaderLabel.setText("Training");

        newNetworkButton.setText("NEW NETWORK");
        newNetworkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNetworkButtonActionPerformed(evt);
            }
        });

        trainButton.setText("Train");
        trainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainButtonActionPerformed(evt);
            }
        });

        outputInputLabel.setText("Output");

        messageLabel.setText("Message: ");

        messageBox.setColumns(20);
        messageBox.setRows(5);
        jScrollPane2.setViewportView(messageBox);

        dumpButton.setText("DUMP Weights");
        dumpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dumpButtonActionPerformed(evt);
            }
        });

        autodataCheckbox.setText("autoData");

        roundsInput.setText("1");

        trainingInputLabel.setText("TRAINING INPUTS");

        rateInputLabel.setText("Rate");

        rateInput.setText("1");
        rateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateInputActionPerformed(evt);
            }
        });

        massLabel.setText("Mass");

        massInput.setText("0.3");

        outputFileButton.setText("Output Path");
        outputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFileButtonActionPerformed(evt);
            }
        });

        hiddenFileButton.setText("Hidden Path");
        hiddenFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hiddenFileButtonActionPerformed(evt);
            }
        });

        lang0.setText("english");
        lang0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lang0ActionPerformed(evt);
            }
        });

        lang1.setText("chinese");
        lang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lang1ActionPerformed(evt);
            }
        });

        output1.setText("output");

        error1.setText("error");

        inputFilePath.setText("filepath");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(massLabel)
                                    .addComponent(errorLabel))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(output0, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                            .addComponent(error0))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(error1)
                                            .addComponent(output1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)))
                                    .addComponent(rateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(massInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(calcButton))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(lang0)
                                            .addGap(18, 18, 18)
                                            .addComponent(lang1))
                                        .addComponent(inputWord, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(trainingInputLabel)
                            .addComponent(inputLabel)
                            .addComponent(outputInputLabel)
                            .addComponent(rateInputLabel)
                            .addComponent(outputLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(trainingHeaderLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(autodataCheckbox)
                                        .addGap(18, 18, 18)
                                        .addComponent(roundsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(236, 236, 236)
                                .addComponent(trainButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dumpButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(outputFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(inputFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(newNetworkButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(hiddenFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(outputFileBox)
                                    .addComponent(hiddenFileBox))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(trainingInputLabel)
                            .addComponent(trainingHeaderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputLabel)
                            .addComponent(autodataCheckbox)
                            .addComponent(roundsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(trainButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lang1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(outputInputLabel)
                        .addComponent(lang0))
                    .addComponent(inputFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rateInputLabel)
                    .addComponent(rateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(massInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(calcButton))
                    .addComponent(massLabel))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputLabel)
                    .addComponent(output0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(output1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dumpButton)
                        .addComponent(outputFileButton)
                        .addComponent(outputFileBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(errorLabel)
                        .addComponent(error0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(error1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(messageLabel)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newNetworkButton)
                            .addComponent(hiddenFileButton)
                            .addComponent(hiddenFileBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newNetworkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNetworkButtonActionPerformed
        // TODO add your handling code here:
        if(hiddenFileBoxString != "" && outputFileBoxString != ""){
            net = new Network(new Matrix(hiddenFileBoxString), new Matrix(outputFileBoxString), inputNodes, hiddenNodes, outputNodes);
        } else{
            net = new Network(inputNodes, hiddenNodes,outputNodes);
        }
    }//GEN-LAST:event_newNetworkButtonActionPerformed

    private void calcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtonActionPerformed
        // TODO add your handling code here:
        updateInputs();
        net.compute(inputDoubleData, inputOutputData);
        updateOutputs();
    }//GEN-LAST:event_calcButtonActionPerformed

    private void trainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainButtonActionPerformed
        updateInputs();
        for(int rounds = 0; rounds < Integer.valueOf(roundsInput.getText()); rounds++){
            if(autodataCheckbox.isEnabled()){
                //updates the training set
                //trains the network on one set
                for(int set = 0; set < trainingInput.size(); set++ ){
                    net.train(trainingInput.get(set), trainingOutput.get(set), rate, mass);
                }
            } else{
                net.train(inputDoubleData, inputOutputData, rate, mass);
            }
        }
        updateOutputs();        
    }//GEN-LAST:event_trainButtonActionPerformed

    private void dumpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dumpButtonActionPerformed
        // TODO add your handling code here:
        String hiddenWeightsString = net.hiddenWeights.debugReturn();
        String outputWeightsString = net.outputWeights.debugReturn();
        messageBox.setText(hiddenWeightsString+outputWeightsString);
        //init current time
        DateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");
        Date dateobj = new Date();
        String timestamp = df.format(dateobj);
        //init file writer
        try{
            BufferedWriter bwH = new BufferedWriter(new FileWriter("weights/hidden"+timestamp));
            BufferedWriter bwO = new BufferedWriter(new FileWriter("weights/output"+timestamp));
            bwH.write(hiddenWeightsString);
            bwO.write(outputWeightsString);
            bwH.close();
            bwO.close();
        } catch (IOException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_dumpButtonActionPerformed

    private void rateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rateInputActionPerformed

    private void outputFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputFileButtonActionPerformed
        //updates outputWeights with the new file
        updateInputs();
        net.outputWeights = new Matrix(messageBoxString);
    }//GEN-LAST:event_outputFileButtonActionPerformed

    private void hiddenFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hiddenFileButtonActionPerformed
        //updates hiddenWeights with the new file
        updateInputs();
        net.hiddenWeights = new Matrix(messageBoxString);
    }//GEN-LAST:event_hiddenFileButtonActionPerformed

    private void lang0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lang0ActionPerformed
        // TODO add your handling code here:
        double state = (lang0.isEnabled())? 1 : 0;
        inputOutputData[0] = state;
    }//GEN-LAST:event_lang0ActionPerformed

    private void lang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lang1ActionPerformed
        // TODO add your handling code here:
        double state = (lang1.isEnabled())? 1 : 0;
        inputOutputData[1] = state;
    }//GEN-LAST:event_lang1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }
    
    public void updateInputs(){
        String inputWordString = inputWord.getText().toLowerCase();
        inputCharData = inputWordString.toCharArray();
        
        inputOutputData[0] = (lang0.isEnabled())? 1 : 0;
        inputOutputData[1] = (lang1.isEnabled())? 1 : 0;
        rate = Double.valueOf(rateInput.getText());
        mass = Double.valueOf(massInput.getText());
        messageBoxString = messageBox.getText();
        hiddenFileBoxString = hiddenFileBox.getText();
        outputFileBoxString = outputFileBox.getText();
    }
    
    public void updateOutputs(){
        output = net.output;
        error = net.error;
        output0.setText(String.valueOf(output[0]));
        output1.setText(String.valueOf(output[1]));
        error0.setText(String.valueOf(error[0]));
        error1.setText(String.valueOf(error[1]));
        
    }
    
    public double[] charsToDouble(char[] inputChars){
        int cSize = inputChars.length;
        double[] returnDoubleArray = new double[cSize];
        
        for(int c = 0; c < cSize; c++){
            
            returnDoubleArray[c] = ((double) inputChars[c] - 'a' + 1) / 26 ;
        }
        
        return returnDoubleArray;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autodataCheckbox;
    private javax.swing.JButton calcButton;
    private javax.swing.JButton dumpButton;
    private javax.swing.JTextField error0;
    private javax.swing.JTextField error1;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField hiddenFileBox;
    private javax.swing.JButton hiddenFileButton;
    private javax.swing.JTextField inputFilePath;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JTextField inputWord;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox lang0;
    private javax.swing.JCheckBox lang1;
    private javax.swing.JTextField massInput;
    private javax.swing.JLabel massLabel;
    private javax.swing.JTextArea messageBox;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JButton newNetworkButton;
    private javax.swing.JTextField output0;
    private javax.swing.JTextField output1;
    private javax.swing.JTextField outputFileBox;
    private javax.swing.JButton outputFileButton;
    private javax.swing.JLabel outputInputLabel;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTextField rateInput;
    private javax.swing.JLabel rateInputLabel;
    private javax.swing.JTextField roundsInput;
    private javax.swing.JButton trainButton;
    private javax.swing.JLabel trainingHeaderLabel;
    private javax.swing.JLabel trainingInputLabel;
    // End of variables declaration//GEN-END:variables
}
